puts("! # type help to get these examples");
puts("! # everything after a # is a comment");
puts("! i * i # i * i = -1");
puts("! 2 - 3i # this is a complex number re = 2, imaginary = -3");
puts("! # the same number can be written as");
puts("! -i 3 + 2");
puts("! 2 + (- 3j)");
puts("! (-I 3) - (-2) # imaginary tag can be i|j|I|J");
puts("! 2;-3");
puts("! # NOTE that I3 or i3 or J3 etc. represent a variable,");
puts("! # but I 3 or i 3 or J 3 or j 3 is a complex number,");
puts("! # whereas 3I 3J 3i 3 i 3 J etc. are complex numbers");
puts("! #");
puts("! # an alternative is to specify a number by");
puts("! # module and argument as");
NEXT_HELP_SCREEN();
puts("! 4,6 # here mod = 4, arg = 6 in radian degrees");
puts("! # note that argument is reduced inside [0, 2PI]");
puts("! # note that ; and , have highest precedence");
puts("! 2;3*2 + 1 # equals (2;3)*2 + 1 = ((2+3i)*2)+1");
puts("! # one could write a full expression");
puts("! 2 + j 4.2 + pi - 4,-6");
puts("! # pi is the constant pi=3.1415926...");
puts("! # another constant is e=2.7182818...");
puts("! #");
puts("! # to switch printing of results in short format use");
puts("! print");
puts("! # real number are a special case");
puts("! # last number is in scientific e format");
puts("! 3 * 3.2 + (3 - 1) * 5 / 2.3e-4 # 2.3e-4 = 0.00023");
puts("! # some other expressions");
NEXT_HELP_SCREEN();
puts("! 3 * (i 4 - 6) + 2,pi");
puts("! 4 - 6j * 5 i - 7 / 2;3");
puts("! # to go back to long result format with global count use");
puts("! print");
puts("! #");
puts("! # supported functions: re(), im(), mod(), arg()");
puts("! re(2;3) # equals 2");
puts("! im(2 + i 3) # is 3 + 0i note 2 + i3 is an error");
puts("! mod(2,4) # is 2 + 0i");
puts("! arg(2,4) # is 4 + 0i converted in [-PI;PI] = -2.2831853072");
puts("! arg(1,pi) # is pi + 0i");
puts("! #");
puts("! # one could save a result in a variable");
puts("! set var1 = 200 - i 4000.456789 # defines and set var1");
puts("! set var2 = 3 + re(4,5) - mod(6j) # defines and set var2");
NEXT_HELP_SCREEN();
puts("! # variable names start with a letter and");
puts("! # contain letters and number only.");
puts("! # defined variables can then be used in expressions");
puts("! var1 + var2 - 5 + i");
puts("! set bb = var1 + var2 - 5 # or to set another variable");
puts("! #");
puts("! # to print the value of a variable use");
puts("! echo bb");
puts("! # to print a string use");
puts("! echo \"a string\"");
puts("! set var1= 2 + bb - var1 + 7 # reset var1");
puts("! #");
puts("! # to list all defined variables use");
puts("! list");
puts("! # to delete a defined variable use");
NEXT_HELP_SCREEN();
puts("! delete bb");
puts("! #");
puts("! # a full expression");
puts("! echo \"The result of\"");
puts("! echo \"2 + re(4;6) - 5i * (5 - 2 / ( 5 - 7i) - e) - arg(i) + var1 - 3\"");
puts("! echo \"is:\"");
puts("! 2 + re(4;6) - 5i * (5 - 2 / ( 5 - 7i) - e) - arg(i) + var1 - 3");
puts("! #");
puts("! #to get a copyright message type:");
puts("! about");
puts("! # to quit the program use quit, or exit, or just q");
puts("! q");
puts("! # to have a look how expressions are evaluated");
puts("! # use -v command line option");